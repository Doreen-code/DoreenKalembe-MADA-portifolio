We shall start by loading a few packages that we think we might need for this data.

```{r, echo=FALSE, message=FALSE}

# Load packages
library(here)
library(knitr)
library(ggplot2)
library(readr)
library(readxl)
library(dplyr)
library(tidyverse)
library(haven)
library(Hmisc)
library(naniar)

```
This data originates from the fivethirtyeight and it about how Americans order their steak. The originial image was a little simple to do but for all the complicated ones that i tried to do either didn't provide the data set or i had a hard time extracting their data sets. 


```{r}
# Read the CSV file
df <- read_csv("data/steak-risk-survey.csv")

# Inspect the column names to find the correct one
colnames(df)
```

```{r}
# Remove NA values and count occurrences of each steak preference
steak_prefs <- df %>%
  filter(!is.na(`How do you like your steak prepared?`)) %>%  # Remove NA values
  count(`How do you like your steak prepared?`) %>%
  mutate(Percentage = n / sum(n) * 100) %>%
  rename(Preference = `How do you like your steak prepared?`) 

# Manually set percentages to match your given values
steak_prefs <- data.frame(
  Preference = c("Well", "Medium-well", "Medium", "Medium-rare", "Rare"),
  Percentage = c(8, 17, 31, 38, 5)
)

# Ensure proper factor levels for correct ordering in the plot
steak_prefs$Preference <- factor(steak_prefs$Preference, levels = rev(steak_prefs$Preference))

# Print cleaned data to verify order
print(steak_prefs)
```

let us now try to generate the plot and see how it looks like.
```{r}
# Create the bar plot with correct order
ggplot(steak_prefs, aes(x = Percentage, y = Preference, fill = Preference)) +
  geom_bar(stat = "identity", show.legend = FALSE) +
  geom_text(aes(label = paste0(Percentage, "%")), hjust = -0.2, size = 5) +
  scale_fill_manual(values = c("#d95a52", "#7a3b1d", "#9b5c34", "#c47b62", "#5c0d0d")) +
  labs(
    title = "'How Do You Like Your Steak Prepared?'",
    subtitle = "From a survey of 432 steak-eating Americans",
    caption = "Source: SurveyMonkey | FIVE THIRTY EIGHT"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold"),
    axis.title = element_blank(),
    axis.text.x = element_blank(),
    axis.ticks.x = element_blank(),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    plot.caption = element_text(hjust = 1)
  )
```

The image I got is close to the original so I asked ai again to help modify this code so that the bars are alittle smaller like the original image. I went ahead and i attached the image for it so that i can know which part to work on.
I went ahead and modified the code like it suggested.

```{r}
# Create the bar plot with correct order
ggplot(steak_prefs, aes(x = Percentage, y = Preference, fill = Preference)) +
  geom_bar(stat = "identity", width=0.4, show.legend = FALSE) +
  geom_text(aes(label = paste0(Percentage, "%")), hjust = -0.2, size = 3) +
  scale_fill_manual(values = c("#d95a52", "#7a3b1d", "#9b5c34", "#c47b62", "#5c0d0d")) +
  labs(
    title = "'How Do You Like Your Steak Prepared?'",
    subtitle = "From a survey of 432 steak-eating Americans",
    caption = "Source: SurveyMonkey | FIVE THIRTY EIGHT"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold"),
    axis.title = element_blank(),
    axis.text.x = element_blank(),
    axis.ticks.x = element_blank(),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    plot.caption = element_text(hjust = 1),
    axis.text.y = element_text(margin = margin(r = -15)),  # Reduce spacing of y-axis labels
    panel.spacing = unit(0, "lines")  # Reduce panel spacing
  ) +
  scale_y_discrete(expand = c(0, 0))  # Reduce expansion of y-axis
  


```
This turned out to be so spread out and after numerous prompts, Claude ai suggested that we should have 60% bar, 40% space. It went ahead and said that this was a balanced value. After hours of trying to figure it out, I came to the conclusion that may be Claude is right.So I went ahead and adjusted it to what it suggested and penned down. 
```{r}
# Create the bar plot with correct order
ggplot(steak_prefs, aes(x = Percentage, y = Preference, fill = Preference)) +
  geom_bar(stat = "identity", width=0.6, show.legend = FALSE) +
  geom_text(aes(label = paste0(Percentage, "%")), hjust = -0.3, size = 3.5) +
  scale_fill_manual(values = c("#d95a52", "#7a3b1d", "#9b5c34", "#c47b62", "#5c0d0d")) +
  labs(
    title = "'How Do You Like Your Steak Prepared?'",
    subtitle = "From a survey of 432 steak-eating Americans",
    caption = "Source: SurveyMonkey | FIVE THIRTY EIGHT"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    plot.background = element_rect(fill = "#f0f0f0", color = NA),
    plot.title = element_text(face = "bold"),
    axis.title = element_blank(),
    axis.text.x = element_blank(),
    axis.ticks.x = element_blank(),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    plot.caption = element_text(hjust = 1),
    axis.text.y = element_text(margin = margin(r = -10)),  # Reduce spacing of y-axis labels
    panel.spacing = unit(0, "lines")  # Reduce panel spacing
  ) +
  scale_y_discrete(expand = c(0.00, 0.00))  # Reduce expansion of y-axis
  

```
For comparison,  This is the original image that we tried to reproduce using data.

![Steak PreferencesSurvey](steak-image.png)

using the same data set, we shall try to make an interactive table.
```{r}
# Load necessary libraries
library(DT)
library(kableExtra)

# Load your data from CSV (adjust file path as needed)
steak_data <- df  # Replace with your actual file path
steak_data<-steak_data%>%
  rename( "Household_income"=`Household Income`)
table(steak_data$Age)
```
Looking at the data, there is a character variable that is the first observation which seems not to make sense to me. It was full of NA values yet it disorganizes my data. We decided to drop it so as we can clear and better sense of the data.
```{r}
steak_data <- steak_data[-1, ]
```

Since I will be using the same data set, I will need to check out the summary statics of a age and income. since these are some of the continuous variables that i have.
now lets check the age variable again.
```{r}
table(steak_data$Age)
```
Before making the table, I decided to make some summary statistics of age and also recategorise the house hold income before making some statistics on it.

```{r}
# Summarize Age Distribution
age_summary <- steak_data %>%
  count(Age) %>%
  mutate(Percentage = n / sum(n) * 100)

# Summarize Household Income
income_summary <- steak_data %>%
  mutate(Income_Range = case_when(
    Household_income < 30000 ~ "<$30k",
    Household_income >= 30000 & Household_income <= 60000 ~ "$30k-$60k",
    TRUE ~ ">$60k"
  )) %>%
  count(Income_Range) %>%
  mutate(Percentage = n / sum(n) * 100)

# Combine the summaries into one table
summary_table <- bind_rows(
  age_summary %>% rename(Category = Age, Count = n, Percentage = Percentage) %>% mutate(Statistic = "Age Distribution"),
  income_summary %>% rename(Category = Income_Range, Count = n, Percentage = Percentage) %>% mutate(Statistic = "Income Distribution")
)


```
lets create a table with some of the features that are required.

Coming to the tables, I did a feed it an ai prompt. 
"help me make an interactive table with these characteristics. 
I listed the characteristics that i wanted. " It produced the first lines of code but my data set was a little messed and hence it needed some cleaning. I went back into the code and removed some observation, recategorised the data then made some summary statistics. 

```{r}
# Create a simple summary table 

simple_table <- summary_table %>%
  kable("html", caption = "Summary of Age and Income Distribution") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
  column_spec(1, bold = TRUE, color = "blue") %>%
  column_spec(2:3, background = "lightyellow") %>%
  column_spec(3, bold = TRUE, color = "red") %>%
  row_spec(1, bold = TRUE, color = "green") %>%
  add_header_above(c("Statistic" = 1, "Category" = 1, "Count & Percentage" = 2)) %>%
  footnote(general = "Summary data for age and income distribution in the survey.")

# Print the table
print(simple_table)

# Display interactive table with DT for better user interaction (sorting, pagination)
final_table<-datatable(summary_table, options = list(pageLength = 5, order = list(1, 'asc')))
final_table
```
The table has been created successfully.
Chatgpt was a really a useful tool during this exercise and the more others to come.

I also realized that when I render this project to website, the first part of the table is not shown i dont know why, so after reading Dr Handels reply on one of our classmates project and advised him to save it and then put it up as an image, i did the same. I took a screenshot of it, saved it and then decided to upload it as an image. This is how the first part of the table looks like since you can only see the second part.

![image of the table](table.png)

After going through the comments on discord, I was advised to save this image as and make it as reproducible as possible but all the prompts on chat gpt redid the tabe that you can see but not the one with colors.





